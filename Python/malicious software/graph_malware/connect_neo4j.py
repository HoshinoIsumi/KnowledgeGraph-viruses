from py2neo import Graph, Node, Relationship

class build_graph():
    def __init__(self):
        self.data_path = ""
        self.graph = Graph("bolt://localhost:7687/", auth="neo4j", password="20040113Ming@", name="neo4j")
        #初始化数据库
        self.graph.delete_all()

    def read_node(self):



        return

    def creat_nodes(self, label, nodes, attribute):
        for node_name in nodes:
            node = node_name(label, name=node_name, other=attribute)
            self.graph.create(node)
    def creat_relationship(self, start_node, end_node,edges,rel_type,rel_name):
        set_edgs = []
        for edge in edges:
            set_edgs.append(edge)
            p = edge[0]
            q = edge[1]
            query = "match(p:%s),(q:%s) where p.name='%s'and q.name='%s' create (p)-[rel:%s{name:'%s'}]->(q)" % (
                    start_node, end_node, p, q, rel_type, rel_name)
            try:
                self.graph.run(query)
            except Exception as e:
                print(e)

    def creat_GraphNode(self):



        return

    def creat_Graphrels(self):



        return

if __name__=='__main__':
    creat = build_graph()
    creat.creat_GraphNode()
    creat.creat_Graphrels()








